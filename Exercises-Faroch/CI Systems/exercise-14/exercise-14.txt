Official string documentation:
https://docs.python.org/3/library/stdtypes.html

 

# 1. Create a new string by concatenating string a and string b
string_a = "This is"
string_b = " the way!"
new_string = <ADD CODE HERE>
print(new_string)

# 2. Create a lower case version of the following string (Hint: take a look at the string documentation for str.lower())
input_string = 'This Is The String'
lowercase_string = <ADD CODE HERE>
print(lowercase_string)

# 3. Create an upper case version of the following string
input_string = 'This Is The String'
uppercase_string = <ADD CODE HERE>
print(uppercase_string)

# 4. Does the string start with an 'S'?
string = 'Begin at once'
result = <ADD CODE HERE>
print(result)

# 5. Does the string end with a '.'?
string = 'The end.'
result = <ADD CODE HERE>
print(result)

# 6. Find the index of the first instance of 'and' (Hint: see str.find())
string = '"Tell me and I forget. Teach me and I remember. Involve me and I learn." -Benjamin Franklin'
index = <ADD CODE HERE>
print('Index:', index)
print('Content:', string[index:index+3])

# 7. Split the string at each comma into several strings in a list (Hint: str.split())
string = 'apples,bananas,cherries,dates'
fruit_list = <ADD CODE HERE>
for fruit in fruit_list:
    print('Fruit:', fruit)

# 8. Print out the number of items in the list
number_list = [45, 65, 2, 4, 10, 94, 23, 54, 2, 54]
list_length = <ADD CODE HERE>
print(list_length)

# 9. Print out the number of characters in the string
quote = '"Whoever is happy will make others happy too." -Anne Frank'
quote_length = <ADD CODE HERE>
print(quote_length)

# 10 Print out the values using string formatting
side_a = 2
side_b = 6
area = side_a * side_b
print('The area of a rectangle with sides {} and {} is {}'.<ADD CODE HERE>)

# 11 Print out the number of apples and oranges in a string using string formatting
basket = { 'apples': 10, 'oranges': 2 }
summary = <ADD CODE HERE>
print(summary)

# 12. Print out the quote inserting the strings in its respective places using string formatting.
name = 'Sir Lancelot of Camelot'
quest = 'To seek the Holy Grail'
favourite_colour = 'Blue'

quote = '''
Bridgekeeper: What is your name?
Lancelot: My name is <ADD CODE HERE>.
Bridgekeeper: What is your quest?
Lancelot: <ADD CODE HERE>.
Bridgekeeper: What is your favourite colour?
Lancelot: <ADD CODE HERE>.
Bridgekeeper: Right. Off you go.
'''
print(<ADD CODE HERE>)

# 13. Do the same thing as last exercise but ask for user input for the answers
name = <ADD CODE HERE>
quest = <ADD CODE HERE>
favourite_colour = <ADD CODE HERE>

quote = '''
Bridgekeeper: What is your name?
Lancelot: My name is <ADD CODE HERE>.
Bridgekeeper: What is your quest?
Lancelot: <ADD CODE HERE>.
Bridgekeeper: What is your favourite colour?
Lancelot: <ADD CODE HERE>.
Bridgekeeper: Right. Off you go.
'''
print(<ADD CODE HERE>)

# 14. Take a number between 0 and 9999 as an input from the user, write a
      program which writes the number of digits in the number.

number = int(input('Enter a number between 0 and 9999: '))

<ADD CODE HERE>


# 15. Add error handling for entering an index which is not in the list by
      printing out 'Invalid index'
fruits = ['apples', 'bananas', 'cherries', 'dates']
<ADD CODE HERE>
index = int(input('Enter fruit index: '))
print('You chose {}'.format(fruits[index]))
<ADD CODE HERE>

# 16. Add error handling for entering an index which is not in the list or not an integer
fruits = ['apples', 'bananas', 'cherries', 'dates']
<ADD CODE HERE>
index = int(input('Enter fruit index: '))
print('You chose {}'.format(fruits[index]))
<ADD CODE HERE>

 
# 17. Let the user choose a number, print out the numbers from 1 to that chosen number.
number = int(input('Enter number: '))
<ADD CODE HERE>


# 18. Print out the item and the number of items in basket on separate lines using a for-loop
basket = { 'apples': 10, 'oranges': 2 }
<ADD CODE HERE>


# 19. Sum the values in the list. Verify the value using sum().
number_list = [34, 23, 5, 61, 12, 14, 4]
<ADD CODE HERE>
print('The sum is:', sum_of_list)
print('The sum should be:', sum(number_list))


# 20. Use a while loop to write a program where the user can enter numbers and add
      each of them to a list. If the user enters a non-integer then print out the
      sum of the list and exit.
number_list = []
<ADD CODE HERE>

print('The sum of the numbers is:', <ADD CODE HERE>)

 
# 21. Add a function print_small_values() to the previous exercise which finds
      all values less than 10 and prints them out.

number_list = []
<ADD CODE HERE>

print('The sum of the numbers is:', <ADD CODE HERE>)
print_small_values(number_list)


# 22. Add a store_values() function to the previous exercise which stores each
      value in a file called "values.txt" with one number per line. Then call
      store_values at the end of the program.


# 23. Add a load_values() function to the previous exercise which loads the values
      and returns the list. At the start of the program initialize number_list using this function.


# 24 a) Use a while loop to create a menu system where a user can either add items, remove items, list items or quit.

Example usage:

$ python3 menu.py

List handler menu. Actions: add, remove, show, quit
> add
Item: apples
Item "apples" added
> show
apples
> remove
Item: apples
Item "apples" removed
> show
> quit
<exit>

# 24 b) Load list from a file on startup and store all changes to the file